/* Mixins  */
@mixin micro {
  @media only screen and (max-width: $break--0) {
    @content;
  }
}

@mixin phone {
  @media only screen and (max-width: ($break--1 - 1px)) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: $break--1) {
    @content;
  }
}

@mixin tablet-specific {
  @media only screen and (min-width: $break--1) and (max-width: ($break--2 - 1px)) {
    @content;
  }
}

@mixin laptop {
  @media only screen and (min-width: $break--2) {
    @content;
  }
}

@mixin laptop-specific {
  @media only screen and (min-width: $break--2) and (max-width: ($break--3 - 1px)) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: $break--3) {
    @content;
  }
}

@mixin desktop-specific {
  @media only screen and (min-width: $break--3) and (max-width: ($break--4 - 1px)) {
    @content;
  }
}

@mixin wide {
  @media only screen and (min-width: $break--4) {
    @content;
  }
}

@mixin max--widths() {
  max-width: $width--phone !important;

  @include tablet-specific {
    max-width: $width--tablet !important;
  }

  @include laptop-specific {
    max-width: $width--laptop !important;
  }

  @include desktop-specific {
    max-width: $width--desktop !important;
  }

  @include wide {
    width: $width--wide-a !important;
    max-width: $width--wide-b !important;
  }
}

@mixin render-column($width, $label) {
  &.size-#{$label} {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset($width, $label) {
  &.offset-#{$label} {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-column-micro($width, $label) {
  &.size-#{$label}-micro {
    flex: 0 0 (($width)+ 0%) !important;
    max-width: (($width)+ 0%) !important;
  }
}

@mixin render-offset-micro($width, $label) {
  &.offset-#{$label}-micro {
    margin-left: (($width)+ 0%) !important;
  }
}

@mixin render-column-phone($width, $label) {
  &.size-#{$label}-phone {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset-phone($width, $label) {
  &.offset-#{$label}-phone {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-column-tablet($width, $label) {
  &.size-#{$label}-tablet {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset-tablet($width, $label) {
  &.offset-#{$label}-tablet {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-column-laptop($width, $label) {
  &.size-#{$label}-laptop {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset-laptop($width, $label) {
  &.offset-#{$label}-laptop {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-column-desktop($width, $label) {
  &.size-#{$label}-desktop {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset-desktop($width, $label) {
  &.offset-#{$label}-desktop {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-column-wide($width, $label) {
  &.size-#{$label}-wide {
    flex: 0 0 (($width)+ 0%);
    max-width: (($width)+ 0%);
  }
}

@mixin render-offset-wide($width, $label) {
  &.offset-#{$label}-wide {
    margin-left: (($width)+ 0%);
  }
}

@mixin render-padding-t-b($var, $label) {
  .top-#{$label} {
    padding-top: (($var));
  }

  .bottom-#{$label} {
    padding-bottom: (($var));
  }
}

@mixin render-padding-t-b-micro($var, $label) {
  @include micro {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-micro {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-micro {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin render-padding-t-b-phone($var, $label) {
  @include phone {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-phone {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-phone {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin render-padding-t-b-tablet($var, $label) {
  @include tablet-specific {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-tablet {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-tablet {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin render-padding-t-b-laptop($var, $label) {
  @include laptop-specific {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-laptop {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-laptop {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin render-padding-t-b-desktop($var, $label) {
  @include desktop-specific {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-desktop {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-desktop {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin render-padding-t-b-wide($var, $label) {
  @include wide {
    .top-#{$label} {
      padding-top: (($var));
    }

    .top-#{$label}-wide {
      padding-top: (($var)) !important;
    }

    .bottom-#{$label} {
      padding-bottom: (($var));
    }

    .bottom-#{$label}-wide {
      padding-bottom: (($var)) !important;
    }
  }
}

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix') format('embedded-opentype'), url($file-name + '.woff2') format('woff2'),
      url($file-name + '.woff') format('woff');
    font-weight: $weight;
    font-style: $style;
    font-display: swap;
  }
}

@mixin rhythm($size, $multiplier: 1.5) {
  font-size: ($size * 10) + px; //fallback for old browsers
  font-size: ($size) + rem;
  line-height: (($size * $multiplier) * 10) + px; //fallback for old browsers
  line-height: ($size * $multiplier) + rem;

  @include phone {
    $phone-size: $size * 0.94;
    $phone-multiplier: $multiplier * 0.94;
    font-size: ($phone-size * 10) + px; //fallback for old browsers
    font-size: ($phone-size) + rem;
    line-height: (($phone-size * $phone-multiplier) * 10) + px; //fallback for old browsers
    line-height: ($phone-size * $phone-multiplier) + rem;
  }
  @include tablet-specific {
    $tablet-size: $size * 0.95;
    $tablet-multiplier: $multiplier * 0.95;
    font-size: ($tablet-size * 10) + px; //fallback for old browsers
    font-size: ($tablet-size) + rem;
    line-height: (($tablet-size * $tablet-multiplier) * 10) + px; //fallback for old browsers
    line-height: ($tablet-size * $tablet-multiplier) + rem;
  }

  @include wide {
    $wide-size: $size * 1.05;
    $wide-multiplier: $multiplier * 1.05;
    font-size: ($wide-size * 10) + px; //fallback for old browsers
    font-size: ($wide-size) + rem;
    line-height: (($wide-size * $wide-multiplier) * 10) + px; //fallback for old browsers
    line-height: ($wide-size * $wide-multiplier) + rem;
  }
}
